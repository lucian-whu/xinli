{"projects" : [
{
	"p_name":"DAWebmail",
	"p_category":"Android",
	"p_date":"Dec '14 - May '15",
	"p_short":"A",
	"p_description":"Conceptualized, designed, programmed, and published on Google PlayStore a GMail like e-mail application based on android that is now used to view my university’s emails and receive notifications on android mobile devices. - It can be extended as an application for all organizations that use Zimbra Web Client. - Prior to this application all university users had to log into their laptops / desktops to view their emails. - Lead a team of four developers to develop this application.",
	"p_link":"/code/dawebmail",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Android", "Scraping", "Email"],
	"p_tech_used": ["Android Studio", "SugarORM", "Jaunt-API"]
},
{
	"p_name":"RequestForChange",
	"p_category":"Website",
	"p_date":"May '15",
	"p_short":"W",
	"p_description":"A website similar to change.org but made with specific requirements of my university, DA-IICT in mind. RFC lets students login with their university login credentials and post ‘petitions’, or requests for change which on sufficient upvotes are reviewed by administrative authorities and dealt with.",
	"p_link":"/code/request-for-change",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Python", "WebDev", "Flask"],
	"p_tech_used":["Python", "Flask", "SQLAlchemy", "PythonAnywhere"]
},
{
	"p_name":"Broadcasts",
	"p_category":"Android",
	"p_date":"Sep '15",
	"p_short":"A",
	"p_description":"An app to send out broadcasts to everyone within an organization/university. Think twitter of emails. It's different from emails because its less formal, it different from Facebook because its less casual and you have the entire university is just one broadcast away. A pubsub model at university level where users can subscribe to groups, receive notifications, event updates of those groups and keep their calendar updated, reminding them of upcoming events. Certain authenticated people have the rights to send out broadcasts to everyone within the org, and the others can create groups of their own.",
	"p_link":"/code/broadcasts",
	"p_weight":"1",
	"p_status":"incomplete",
	"p_tags" : ["Android", "GCM", "Slack"],
	"p_tech_used":["Android Studio", "GCM", "Python", "Flask", "SugarORM", "Sqlite"]
},
{
	"p_name":"Alarm For Lazy People",
	"p_category":"Android",
	"p_date":"Oct '15",
	"p_short":"A",
	"p_description":"An Android based application that sets consecutive alarms from a start time to an end time with a given interval, to make sure you wake up tomorrow morning. It uses the stock android clock as the base clock. Really is for the laziest of people!",
	"p_link":"/code/alarm-for-lazy-people",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Android", "Alarm"],
	"p_tech_used":["Android Studio"]
},
{
	"p_name":"Money Keep",
	"p_category":"Android",
	"p_date":"Oct '15",
	"p_short":"A",
	"p_description":"An Android Application to manage money transactions (borrowing and lending). I built this because I was using Google Keep to keep a track of how much I owe people, and how much people owe me. An easy to use application where you enter transaction details as a sentence and the app interprets it automatically.",
	"p_link":"/code/money-keep",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Android"],
	"p_tech_used":["Android Studio"]
},
{
	"p_name":"MediTracker",
	"p_category":"Health Care",
	"p_date":"Aug '15",
	"p_short":"H",
	"p_description":"An amazing experience, working with Professors and scientists at MIT, MIT Redx Mumbai, and government officials towards bringing technology into the Kumbhmela. Built a web dashboard to analyze app usage of a health care application that provided details of hospitals and medical stores in and around Nasik. Link to playstore : https://play.google.com/store/apps/details?id=com.kumbhthon.meditracker",
	"p_link":"/code/kumbhthon",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Android", "HealthCare", "Volunteering"],
	"p_tech_used":["Python", "Flask", "Google Maps", "Android Studio"]
},
{
	"p_name":"Cyberroam Logout Hack",
	"p_category":"Hacking",
	"p_date":"Nov '15",
	"p_short":"H",
	"p_description":"Parth and I spent three hours of a very boring workshop on GoLang(though I really wanted to start learning Go) trying to figure out loopholes in Cyberroam's Captive Portal. We have to login to Cyberroam before we can surf the net, allowing the university to keep a track of the websites we visit. We were playing around, looking at the network requests made whil logging in and logging out, when we realised cyberroam logs you out based on your IP, and not your ID (funny to think they missed this). And we made use of this fact to log out everyone connected to the WiFi in the workshop from their cyberroam :)",
	"p_link":"/code/cyberroam-hack-logging-out",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Hack", "Python", "Cyberroam"],
	"p_tech_used": ["Python", "Shell", "Awk", "(And a little bit of what we learnt from out Networks course)"]
},
{
	"p_name":"Atlas Earth",
	"p_category":"Android",
	"p_date":"Apr '14",
	"p_short":"A",
	"p_description":"I've been very weak at geography from the very start. My father used to quiz me on capitals and places all the time but I'd always struggle to remember our map. At the time I created the app, there was no application on the playstore that would ",
	"p_link":"/code/atlas-earth",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Android", "Scraping", "Quiz"],
	"p_tech_used":["Android Studio", "Python","Mechanize", "BS4", "Sqlite"]
},
{
	"p_name":"Drunk Much",
	"p_category":"Android",
	"p_date":"Dec '14",
	"p_short":"A",
	"p_description":"I started off this application for a client who wanted to block her young daughter from calling people while she played around with her phone. I later changed the app to make it more interesting by blocking you from call and receiving calls when you're not sober. After watching The Internship (a must watch!) a group of 4 software developers working at Google created this application after a week long of frustration because they couldnt come up with a good idea.",
	"p_link":"/code/drunk-much",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Android"],
	"p_tech_used":["Android Studio", "SugarORM"]
},
{
	"p_name":"Analytics with Flask",
	"p_category":"Analytics",
	"p_date":"Jun '15",
	"p_short":"P",
	"p_description":"I reinvented the wheel with this one. But Im glad I did. Basically made Google Analytics for apps using Python Flask and a local database which pushes new information every time it receives a net connection. What Pradeet and I created is a tool to save data on the app locally as JSON until it can be pushed to the online database. We used this to track users using DAWebmail, keeping a tab of how often the app is used, viewing user actions- how many webmails are read on the app, how often webmails are deleted from the app, and so on. I later used this at MIT Kumbathon to track how often people call the ambulance/hospital during the Kumbhmela.",
	"p_link":"/code/flask-analytics",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Android", "Python", "Flask", "RestAPI", "JSON"],
	"p_tech_used":["Python", "Flask", "SQLAlchemy", "SugarORM", "Android Studio"]
},
{
	"p_name":"Keep Up - Questionnaire",
	"p_category":"Tool",
	"p_date":"Jul '15",
	"p_short":"T",
	"p_description":"This idea initiated as a request on Fiverr. When I first started KeepUp, I though this would be the next big thing in my life. I was sure I could almost startup with this idea. Ah good days. The idea was to create a platform for shopkeepers/event organizers to be able to create and take feedback forms with ease. Having lived in Switzerland for 10 years convinced me that for every owner there, customer feedback is of utmost importance. So Pradeet worked on the app while I worked on the backend (Python Flask again!) and made a demo video of the same. I even decided how much I'd charge, and everything seemed perfect. Until I just couldnt get anyone to buy it, other than the client on Fiverr. I did not complete project entirely.",
	"p_link":"/code/keep-up-questionnaire",
	"p_weight":"2",
	"p_status":"incomplete",
	"p_tags" : ["Android", "Python", "Flask", "RestAPI", "JSON"],
	"p_tech_used":["Android Studio", "Python", "Flask", "SQLAlchemy", "Sqlite"]
},
{
	"p_name":"Noun Analysis",
	"p_category":"Text Analysis / Web Scraping",
	"p_date":"Aug '15",
	"p_short":"T",
	"p_description":"In our DBMS course, we were asked to first create an SRS of our project, and later analyze it manually by listing all nouns, verbs and adjectives to help us model our database. We were asked to list down at least 500 nouns and I was not going to do so manually. And so, I wrote a short 50 line Java code that takes a paragraph as input, and returns all nouns, verbs and adjectives present. I did this by taking each word, appending 'definition' to it, and scraping it's Google result. Clever huh? (I did not have the time to look up a dictionary API, and I wasnt aware of any NLP libraries at that time.)",
	"p_link":"/code/noun-analysis",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Java", "Text-Analysis", "scraping"],
	"p_tech_used":["Java"]
},
{
	"p_name":"Hangman",
	"p_category":"Java",
	"p_date":"Jan '14",
	"p_short":"J",
	"p_description":"This was my very Java code ever. I spent a long 2 months developing it at that time. I worked on it with Sanchit Agrawal, for our IT class in grade 12. The game gived you a words of varying difficulty, and scores you on the basis of the number of lives lost, word difficulty and hints used. You can buy hints from the store using points that you earn. Very simple, but hey, it was my first game ever. I was particularly happy after completing it, as thats when I realized you can actually make whatever you want using code.",
	"p_link":"/code/hangman",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Java"],
	"p_tech_used":["Java", "Swing"]
},
{
	"p_name":"F-1 Simulation",
	"p_category":"Java",
	"p_date":"Oct '15",
	"p_short":"J",
	"p_description":"A project to simulate the F1 experience by setting your own parameters. I found this interesting question on GeekForGeeks. (Yes, okay I've become one of them :p) It really did catch my eye. Firstly, because it was Java oriented, and not extremely algorithmic in nature. The question asks you to solve it keeping Java coding practises intact. Secondly, its just fun to make simulations, isnt it? :D I spent almost an hour after coding this, messing around with the values and looking at the outcome. And just for the record, I spent 2 hours on coding it.",
	"p_link":"/code/f1-simulation",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Java"],
	"p_tech_used":["Java"]
},
{
	"p_name":"Knight's Tour",
	"p_category":"Android",
	"p_date":"May '15",
	"p_short":"A",
	"p_description":"This was an early project I developed when I was super enthusiastic about making an app for everything I learn. We solved the Knight's tour problem in our data structure's class and I thought coming up with an app for the same would be really fun. The aim is to cover an entire chess board using just your knight. The code is general enough to allow grids of varying sizes.",
	"p_link":"/code/knights-tour",
	"p_weight":"2",
	"p_status":"complete",
	"p_tags" : ["Android", "Algorithms"],
	"p_tech_used":["Android Studio"]
},
{
	"p_name":"Virtual Trackpad",
	"p_category":"Networks",
	"p_date":"Nov '15",
	"p_short":"N",
	"p_description":"As a part of our Computer Networks course, I and two batchmates developed a virtual-trackpad in lure of extra credit. We developed an application to track a laptops pointer and type on the laptop remotely through a hand held device (Android phone). The laptop acts as a server, and the phone, the client, connected via WiFi.",
	"p_link":"/code/virtual-trackpad",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Android", "Networks", "virtual-trackpad", "Sockets"],
	"p_tech_used":["Sockets", "Java", "Android"]
},
{
	"p_name":"Indoor Navigation System",
	"p_category":"Hardware",
	"p_date":"Jun '15, Nov '15",
	"p_short":"H",
	"p_description":"A global challenge whose solution is still not general enough to work for any indoor mapping. I and a group of 4 other people created a working model that could point out roughly where you are in our university’s lab building. We also created an app that could help you navifate to a certain room on the same floor.",
	"p_link":"/code/indoor-navigation",
	"p_weight":"1",
	"p_status":"complete",
	"p_tags" : ["Java", "Hardware", "WiFi", "Raspberry Pi", "Xbee", "BBB"],
	"p_tech_used":["Arduino", "Xbee", "Beagle Bone Black", "WiFi Triangulation", "WiFi Trilateration", "Fingerprinting"]
},
{
	"p_name":"The Power of SSH",
	"p_category":"Linux",
	"p_date":"May '15",
	"p_short":"L",
	"p_description":"Cheat in lab exams without ever getting caught! I learnt about SSH at Tesseract when I had to get into the BananaPro and edit a python script. Later on, I used SSH in a lab exam to communicate with a friend, and copying his answer folder into mine, without even having to whisper! When I look back, it was probably my stepping stone into learning the power of linux. This was just a very simple use case of ssh. I went on and read up a little more on the topic and here's what Ive written more about it here.",
	"p_link":"/code/ssh",
	"p_weight":"3",
	"p_status":"complete",
	"p_tags" : ["Linux"],
	"p_tech_used":"Linux"
},
{
	"p_name":"Tag Search",
	"p_category":"Python, Web",
	"p_date":"Aug '15",
	"p_short":"P",
	"p_description":"Another one of superb ideas that I havent had time to work on. This is the idea. Every topic on this planet has a wikipeadia page. Scrape the data, remove all stop words and analyze the top 5 most used words. Associate that topic with those 5 words, hence creating a database of key search words for every listed topic. This way you can also see topics similar to other topics, on the basis of the tags. For example, take the wiki page of Bastille Pompeii. The top 5 words are the artist's name, the band name, the city name, the genre of music (pop), and the year it released. (Yes Ive actually tried this, and these were the results). This way you can figure out other songs from Bastille, other events that took place in the year the song was released, and songs of similar genre. I should really work on this!",
	"p_link":"/code/tag-search",
	"p_weight":"1",
	"p_status":"incomplete",
	"p_tags" : [""],
	"p_tech_used":""
},
{
	"p_name":"Are you cheating?",
	"p_category":"Text Analysis",
	"p_date":"Aug '15",
	"p_short":"T",
	"p_description":"I never really got to working on the project, but it is worth mentioning. In our Human Compter Interaction course, we were asked to submit a document containing 9 questions, in jumbled order. The catch was, the submission was to be made on one of our batchmates' servers, who happens to be a good friend of mine. My idea was to analyze each answer with every other answer and view how similar they were. Obviouslty we'd have to come up with a good algorithm to be able to compare each paper with the other. My initial idea was to remove all stop words and maintain a tab of the remaining words for each answer. And then check similarity of answers in each submission. Would've been very fun to analyze, but sadly did not have the time to start!",
	"p_link":"/code/are-you-cheating",
	"p_weight":"1",
	"p_status":"incomplete",
	"p_tags" : [""],
	"p_tech_used":""
},
{
	"p_name":"",
	"p_category":"",
	"p_date":"",
	"p_short":"",
	"p_description":"",
	"p_link":"",
	"p_weight":"",
	"p_status":"",
	"p_tech_used":""
}
]}